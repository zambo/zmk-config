/*                KEY POSITIONS

  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50



/******************************************************
 * VERTICAL INTERSECTIONS COMBOS - LEFT HAND
 ******************************************************/

// ESC, TAB, DEL
ZMK_COMBO(l_tab,    &kp LS(TAB), LM1 LT1,    DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) /* lt1 + lm1 = shift-tab */
ZMK_COMBO(l_del,    &kp DEL,      LM2 LT2,    DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) /* lt3 + lm3 = DEL */
ZMK_COMBO(l_esc,    &kp ESC,      LM4 LT4,    DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) /* lt5 + lm5 = esc */

// Symbols & _ \ %
ZMK_COMBO(l_ampersand, &kp AMPS,   LT0 LM0,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) /* lt0+lm0 = & */

ZMK_COMBO(l_underscore,&kp UNDER,  LM2 LB2,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) /* lt2+lm2 = _ */
ZMK_COMBO(l_bslash,    &kp BSLH,   LM3 LB3,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) /* lt3+lm3 = \ */
ZMK_COMBO(l_percent,   &kp PERCENT,LM4 LB4,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) /* lt4+lm4 = % */



/******************************************************
 * VERTICAL INTERSECTIONS COMBOS - RIGHT HAND
 ******************************************************/

// ESC, TAB, BSPC 
ZMK_COMBO(r_tab,    &kp TAB,      RM1 RT1,    DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) /* rt1 + rm1 = tab */
ZMK_COMBO(r_bspc,   &kp BSPC,     RM2 RT2,    DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) /* rt2 + rm2 = backspace */
ZMK_COMBO(r_esc,    &kp ESC,      RM4 RT4,    DEF NAV NUM, COMBO_TERM_SLOW, COMBO_IDLE_SLOW) /* rt4 + rm4 = esc */

// Symbols | " = \ @ `
ZMK_COMBO(pipe,      &kp PIPE,    RT0 RM0,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) /* rt0+rm0 = | */
ZMK_COMBO(quote,     &kp QUOT,    RT3 RM3,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) /* rt3+rm3 = " */

ZMK_COMBO(equals,    &kp EQL,     RM0 RB0,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) /* rm0+rb0 = = */
ZMK_COMBO(fslash,    &kp FSLH,    RM1 RB1,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) /* rm1+rb1 = / */
ZMK_COMBO(at,        &kp AT,      RM2 RB2,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) /* rm2+rb2 = @ */
ZMK_COMBO(grave,     &kp GRAVE,   RM3 RB3,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST) /* rm3+rb3 = ` */

/******************************************************
 * HORIZONTAL INTERSECTIONS COMBOS - both hands
 ******************************************************/

/*  L0 + L1               R0 + R1
    * T: <                   >
    * M: ^                   $
    * B: -                   +
* */

ZMK_COMBO(lt,      &kp LT,        LT0 LT1,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(gt,      &kp GT,        RT0 RT1,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(caret,   &kp CARET,     LM0 LM1,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(dollar,  &kp DLLR,      RM0 RM1,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(dash,    &kp MINUS,     LB0 LB1,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(plus,    &kp PLUS,      RB0 RB1,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)


/*  L1 + L2               R1 + R2
    * T: {                   }
    * M: (                   )
    * B: [                   ]
* */

ZMK_COMBO(lcurly,   &kp LBRC,     LT1 LT2,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rcurly,   &kp RBRC,     RT1 RT2,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(lpar,     &kp LPAR,     LM1 LM2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rpar,     &kp RPAR,     RM1 RM2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(lbrack,   &kp LBKT,     LB1 LB2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbrack,   &kp RBKT,     RB1 RB2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/*  L2 + L3               R2 + R3
    * T: *                   #
    * M: !                   :
    * B: ~                   ;
* */

ZMK_COMBO(star,    &kp STAR,      LT2 LT3,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(hash,    &kp HASH,      RT2 RT3,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(excl,    &kp EXCL,      LM2 LM3,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(colon,   &kp COLON,     RM2 RM3,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(tilde,   &kp TILDE,     LB2 LB3,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(semi,    &kp SEMI,      RB2 RB3,    DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

/*  L3 + L4               R3 + R4
    * T: XXX                XXX
    * M: XXX                XXX
    * B: XXX                XXX
* */

// Pinky left empty on purpose
